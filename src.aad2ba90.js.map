{"version":3,"sources":["node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/regex.js","node_modules/uuid/dist/esm-browser/validate.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v1.js","node_modules/uuid/dist/esm-browser/parse.js","node_modules/uuid/dist/esm-browser/v35.js","node_modules/uuid/dist/esm-browser/md5.js","node_modules/uuid/dist/esm-browser/v3.js","node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/v4.js","node_modules/uuid/dist/esm-browser/sha1.js","node_modules/uuid/dist/esm-browser/v5.js","node_modules/uuid/dist/esm-browser/nil.js","node_modules/uuid/dist/esm-browser/version.js","node_modules/uuid/dist/esm-browser/index.js","src/analytics-api.js","src/cookie.js","src/index.js"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","toLowerCase","stringify","TypeError","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","options","buf","b","Array","node","clockseq","undefined","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","parse","v","parseInt","stringToBytes","str","unescape","encodeURIComponent","bytes","length","charCodeAt","DNS","URL","v35","name","version","hashfunc","generateUUID","value","namespace","_namespace","set","err","md5","msg","md5ToHexEncodedArray","wordsToMd5","bytesToWords","input","output","length32","x","hex","charAt","getOutputLength","inputLength8","len","a","c","d","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","Uint32Array","y","lsw","bitRotateLeft","num","cnt","md5cmn","q","s","t","v3","randomUUID","v4","native","rnds","f","z","ROTL","sha1","K","H","isArray","prototype","call","l","N","Math","ceil","M","j","pow","floor","W","e","T","v5","trackPageview","params","console","log","trackEvent","getCookie","parts","document","cookie","split","pop","shift","setCookie","date","setTime","getTime","expires","toUTCString","uuidv4","testVariation","showVariation","cookieValue","setup","control","getElementById","link","classList","add","addEventListener","event","preventDefault","variant","url","window","location","href","JSON","eventName"],"mappings":"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","file":"src.aad2ba90.js","sourceRoot":"..","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nexport default version;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","/**\n * Tracks a pageview to our \"imaginary api\" - in this demo just the browser console. ;)\n * Send as params whatever you might seem valuable to send.\n * The URL is probably a good start though.\n */\nexport const trackPageview = (params) => {\n  console.log(`--> Tracking Pageview: ${params}`);\n};\n\n/**\n * Tracks an event to our \"imaginary api\" - in this demo just the browser console. ;)\n * Send as params whatever you might seem valuable to send.\n * The URL and an event name are probably a good start though.\n */\nexport const trackEvent = (params) => {\n  console.log(`--> Tracking Event: ${params}`);\n};\n","export function getCookie (name)\n{\n  const value = '; ' + document.cookie;\n  const parts = value.split('; ' + name + '=');\n  if (parts.length === 2)\n  {\n    return parts.pop().split(';').shift();\n  }\n}\n\n/**\n * cookies that would expire in 2 weeks \n */\nexport function setCookie (name, value)\n{\n  const date = new Date();\n  date.setTime(date.getTime() + (14 * 24 * 60 * 60 * 1000));\n  let expires = \"expires=\" + date.toUTCString();\n  document.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";\n\n}\n","import \"./styles.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { trackPageview, trackEvent } from \"./analytics-api.js\";\nimport { setCookie, getCookie } from \"./cookie\";\n\n\n\n/**\n *  So basically to determine a winning variation\n * the trackPageview function and trackEvent function\n * should get the sessionId and name of the variant shown \n * to the user as it would be enough to see the conversion. \n */\n\nif (!getCookie('sessionId'))\n{\n  setCookie('sessionId', uuidv4());\n  const testVariation = Math.random() < 0.5\n  setCookie('abTestVersion', testVariation ? 'test' : 'control')\n}\n\nlet showVariation = false\nconst cookieValue = getCookie('abTestVersion')\nif (cookieValue === 'test')\n{\n  showVariation = true\n}\n\n/** \n * Given the current structure, only the load\n * event will work.\n * \n * In a more complex SPA internal navigation \n * will not trigger load. In that case we'll\n * use complex router that uses the History API\n * and then the `popstate` event would be used.\n * \n */\n\nwindow.addEventListener('load', () =>\n{\n  setup()\n  \n  const uuid = getCookie('sessionId')\n  const variant = getCookie('abTestVersion')\n  const url = window.location.href\n  trackPageview(\n    JSON.stringify({ uuid, variant, url })\n  )\n})\n\nfunction setup() {\n  const control = document.getElementById('control')\n  const test = document.getElementById('test')\n  const link = document.getElementById('button')\n\n  if (showVariation)\n  {\n test.classList.add('show')\n  } else\n  {\n    control.classList.add('show')\n  }\n\n  link.addEventListener('click', function (event) {\n    event.preventDefault();\n\n    const uuid = getCookie('sessionId')\n    const variant = getCookie('abTestVersion')\n    const url = window.location.href\n    const eventName = 'sign up'\n\n    trackEvent(JSON.stringify({\n      uuid, \n      variant, \n      eventName, \n      url\n    }))\n  });\n}\n"]}